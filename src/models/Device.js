const mongoose = require('mongoose');

const deviceSchema = new mongoose.Schema(
  {
    // A unique, persistent identifier generated by the device agent
    uniqueIdentifier: {
      type: String,
      required: true,
      unique: true,
      index: true,
    },
    deviceName: {
      type: String,
      required: [true, 'Please add a device name'],
    },
    platform: {
      type: String,
      required: true,
      enum: ['android', 'windows', 'ios', 'linux', 'macos'],
    },
    storage: {
      total: { type: Number }, // in GB
      free: { type: Number },
    },
    ram: {
      total: { type: Number }, // in GB
      free: { type: Number },
    },
    ipAddress: {
      type: String,
    },
    lastSeen: {
      type: Date,
      default: Date.now,
    },
    // In a real multi-user system, you would link this to a user
    // user: {
    //   type: mongoose.Schema.Types.ObjectId,
    //   ref: 'User',
    //   required: true
    // }
  },
  {
    timestamps: true,
    toJSON: { virtuals: true },
    toObject: { virtuals: true },
  }
);

// Virtual property for online status
deviceSchema.virtual('status').get(function() {
  const fiveMinutesAgo = new Date(Date.now() - 5 * 60 * 1000);
  return this.lastSeen > fiveMinutesAgo ? 'online' : 'offline';
});

module.exports = mongoose.model('Device', deviceSchema);
